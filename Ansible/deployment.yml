#######     Docker play-book     #######  
---
- name: Deployment Docker Container
  hosts: <target-host>
  remote_user: <used-user-on-vm>
  become: true
  vars:     # Variables from jenkins pipeline
    docker_image: "{{ docker_image }}"
    docker_tag: "{{ docker_tag }}"  
  tasks:

    - name: Pull an image
      community.docker.docker_image:
        name: "{{ docker_image }}:{{ docker_tag }}"
        source: pull 

    - name: Stop any docker container for BoardGame
      community.docker.docker_container:
        name: depi-board-game
        state: absent
        force_kill: true

    - name: Run Docker container
      community.docker.docker_container:
        name: depi-board-game
        image: "{{ docker_image }}:{{ docker_tag }}"
        state: started
        ports:
          - "8080:80"
        restart_policy: always

#######     Kubernetes play-book     ####### 
---

- name: Kubernetes Operations
  hosts: <target-host>
  remote_user: <used-user-on-vm>
  become: true
  tasks:

  - name: Apply Kubernetes Manifest to create the deployment
    shell: kubectl apply -f ../Kubernetes/Deployment.yml

  - name: Apply Kubernetes Manifest to create the LoadBalancer
    shell: kubectl apply -f ../Kubernetes/ingress.yml
