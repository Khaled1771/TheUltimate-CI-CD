---
- name: Install and Configure CI/CD Tools
  hosts: all
  become: true
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes
      when: ansible_os_family == "Debian"

    - name: Install common packages
      package:
        name:
          - curl
          - wget
          - git
          - unzip
          - vim
          - python3
          - python3-pip
          - jq
        state: present

    - name: Install Docker
      include_tasks: tasks/install_docker.yml

- name: Configure Jenkins Server
  hosts: jenkins
  become: true
  tasks:
    - name: Install Java
      package:
        name: openjdk-17-jdk
        state: present
      when: ansible_os_family == "Debian"

    - name: Add Jenkins apt key
      apt_key:
        url: https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key
        state: present
      when: ansible_os_family == "Debian"

    - name: Add Jenkins apt repository
      apt_repository:
        repo: deb https://pkg.jenkins.io/debian-stable binary/
        state: present
      when: ansible_os_family == "Debian"

    - name: Install Jenkins
      apt:
        name: jenkins
        state: present
        update_cache: yes
      when: ansible_os_family == "Debian"

    - name: Start and enable Jenkins service
      service:
        name: jenkins
        state: started
        enabled: yes

    - name: Add Jenkins user to docker group
      user:
        name: jenkins
        groups: docker
        append: yes

    - name: Install Maven
      unarchive:
        src: https://mirrors.ocf.berkeley.edu/apache/maven/maven-3/3.8.6/binaries/apache-maven-3.8.6-bin.tar.gz
        dest: /opt
        remote_src: yes
        creates: /opt/apache-maven-3.8.6

    - name: Create symbolic link for Maven
      file:
        src: /opt/apache-maven-3.8.6
        dest: /opt/maven
        state: link

    - name: Set up Maven environment variables
      copy:
        content: |
          export M2_HOME=/opt/maven
          export PATH=${M2_HOME}/bin:${PATH}
        dest: /etc/profile.d/maven.sh
        mode: '0644'

    - name: Install kubectl
      shell: |
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x kubectl
        mv kubectl /usr/local/bin/
      args:
        creates: /usr/local/bin/kubectl

    - name: Install AWS CLI
      unarchive:
        src: https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip
        dest: /tmp
        remote_src: yes
        creates: /tmp/aws
      
    - name: Install AWS CLI (continued)
      shell: /tmp/aws/install
      args:
        creates: /usr/local/bin/aws

    - name: Install Trivy for vulnerability scanning
      shell: |
        apt-get install wget apt-transport-https gnupg lsb-release -y
        wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | gpg --dearmor | tee /usr/share/keyrings/trivy.gpg > /dev/null
        echo "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb generic main" | tee -a /etc/apt/sources.list.d/trivy.list
        apt-get update
        apt-get install trivy -y
      args:
        creates: /usr/bin/trivy
      when: ansible_os_family == "Debian"

    - name: Restart Jenkins to apply changes
      service:
        name: jenkins
        state: restarted

- name: Configure Nexus Server
  hosts: nexus
  become: true
  tasks:
    - name: Install Java
      package:
        name: openjdk-17-jdk
        state: present
      when: ansible_os_family == "Debian"

    - name: Create Nexus user
      user:
        name: nexus
        shell: /bin/bash
        home: /opt/nexus
        create_home: yes
        system: yes

    - name: Download Nexus OSS
      get_url:
        url: https://download.sonatype.com/nexus/3/nexus-3.63.0-01-unix.tar.gz
        dest: /tmp/nexus.tar.gz
        mode: '0644'

    - name: Create Nexus installation directory
      file:
        path: /opt/nexus
        state: directory
        owner: nexus
        group: nexus

    - name: Extract Nexus OSS
      unarchive:
        src: /tmp/nexus.tar.gz
        dest: /opt/nexus
        remote_src: yes
        extra_opts: [--strip-components=1]
        owner: nexus
        group: nexus
        creates: /opt/nexus/bin/nexus

    - name: Create Nexus data directory
      file:
        path: /opt/nexus-data
        state: directory
        owner: nexus
        group: nexus

    - name: Set NEXUS_HOME environment
      lineinfile:
        path: /opt/nexus/bin/nexus.rc
        regexp: '^#?run_as_user="nexus"'
        line: 'run_as_user="nexus"'

    - name: Create Nexus service file
      copy:
        content: |
          [Unit]
          Description=Nexus Repository Manager
          After=network.target

          [Service]
          Type=forking
          ExecStart=/opt/nexus/bin/nexus start
          ExecStop=/opt/nexus/bin/nexus stop
          User=nexus
          Group=nexus
          Restart=on-abort

          [Install]
          WantedBy=multi-user.target
        dest: /etc/systemd/system/nexus.service
        mode: '0644'

    - name: Start and enable Nexus service
      systemd:
        name: nexus
        daemon_reload: yes
        enabled: yes
        state: started
