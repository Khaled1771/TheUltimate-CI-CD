pipeline {
    agent any
    
    tools {
        jdk "jdk17"
        maven "maven3"
    }
    
    environment{
        GIT_REPO = 'https://github.com/Khaled1771/TheUltimate-CI-CD.git'
        BRANCH = 'dev'
        FOLDER_NAME = 'BoardGame'
        
        IMAGE_NAME = 'osamaseyam/boardgame-app'
        IMAGE_TAG = 'latest'
        SCANNER_HOME = tool 'sonar-scanner'
    }
    
    stages {
        stage('Git Checkout') {
            steps {
                git branch: "${BRANCH}", credentialsId: 'git-cred' , url: "${GIT_REPO}"
            }
        }
        
        stage('Compile') {
            steps {
                script {
                    dir("BoardGame"){
                         sh 'mvn compile'
                    }
                }
            }
        }
        
        stage('Test') {
            steps {
                script {
                    dir("${FOLDER_NAME}"){
                         sh 'mvn test'
                    }
                }
            }
        }
        
        // stage('File System Scan') {
        //     steps {
        //         script {
        //             dir("${FOLDER_NAME}"){
        //                   sh 'trivy fs --format table -o trivy-fs-report.html .'
        //             }
        //         }
        //     }
        // }
        
        stage('SonarQube Analysis') {
            steps {
                script {
                    dir("${FOLDER_NAME}"){
                        withSonarQubeEnv('SonarQube') {
                            sh '''
                               $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=BoardGame-dev -Dsonar.projectKey=BoardGame-dev \
                               -Dsonar.java.binaries=. 
                            '''
                        }
                    }
                }
            }
        }
            
        stage('Quality Gate') {
            steps {
                script{
                    waitForQualityGate abortPipeline: false, credentialsId: 'sonar-cred'
                }
            }
        }
        
        stage('Build'){
            steps{
               script {
                    dir("${FOLDER_NAME}"){
                         sh 'mvn package'
                    }
                }
            }
        }
        
         stage('Publish To nexus'){
            steps{
                script {
                    dir("${FOLDER_NAME}"){
                         withMaven(globalMavenSettingsConfig: 'global-settings', jdk: 'jdk17', maven: 'maven3', mavenSettingsConfig: '', traceability: true) {
                            sh 'mvn deploy'
                        }
                    }
                } 
            }
        }
        
         stage('Build & Tag Docker Image'){
            steps{
                script { 
                    dir("${FOLDER_NAME}"){
                        withDockerRegistry(credentialsId: "docker-cred" , toolName:'docker'){
                            sh "docker build -t ${IMAGE_NAME}:${IMAGE_TAG} ."                        
                        }
                    }
                }
            }
        }
        
        // stage('Docker Image Scan') {
        //     steps {
        //         sh 'trivy image --format table -o trivy-fs-report.html osamaseyam/boardgame:lts'
        //     }
        // }
        
        
        stage('Push Docker Image'){
            steps{
                script {
                   dir("${FOLDER_NAME}"){ 
                        withDockerRegistry(credentialsId: "docker-cred" , toolName:'docker'){
                            sh "docker push ${IMAGE_NAME}:${IMAGE_TAG}"                        
                        }
                   }
                }
            }
        }
        
    }
}